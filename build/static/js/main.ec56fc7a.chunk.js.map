{"version":3,"sources":["view/component/progress-bar/ProgressBar.js","view/page/HomePage.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["ProgressBar","initialProgress","maxSteps","useState","progress","setProgress","className","id","onClick","style","width","HomePage","Routes","component","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAGaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAC9C,EAAgCC,mBAASF,EAAkB,GAAKA,EAAkBC,EAAWD,EAAkB,GAA/G,mBAAOG,EAAP,KAAiBC,EAAjB,KASA,OACC,sBAAKC,UAAW,oBAAhB,UACC,qBAAKC,GAAI,SAAUC,QATE,WAClBJ,EAAW,GAAGC,EAAYD,EAAW,IAQIE,UAAW,iBAAvD,eACA,qBAAKC,GAAI,WAAYD,UAAW,cAAhC,SACC,qBAAKG,MAAO,CAAEC,MAAO,IAAMN,EAASF,GAAYI,UAAW,eAE5D,qBAAKC,GAAI,WAAYC,QAVE,WACpBJ,EAAWF,GAAUG,EAAYD,EAAW,IASCE,UAAW,iBAA3D,mBChBUK,EAAW,WACvB,OACC,gCACC,yCACA,cAAC,EAAD,CAAkBV,gBAAiB,EAAGC,SAAU,QCUpCU,E,4JAXX,WACI,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,UAAWF,Y,GANjBG,IAAMC,WCOZC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec56fc7a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './ProgressBar.css'\r\n\r\nexport const ProgressBar = ({ initialProgress, maxSteps }) => {\r\n\tconst [progress, setProgress] = useState(initialProgress > 0 && initialProgress < maxSteps ? initialProgress : 1)\r\n\r\n\tconst reduceProgress = () => {\r\n\t\tif (progress > 1) setProgress(progress - 1)\r\n\t}\r\n\tconst increaseProgress = () => {\r\n\t\tif (progress < maxSteps) setProgress(progress + 1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={'progressContainer'}>\r\n\t\t\t<div id={'reduce'} onClick={reduceProgress} className={'progressSymbol'}>-</div>\r\n\t\t\t<div id={'progress'} className={'progressBar'}>\r\n\t\t\t\t<div style={{ width: 350 * progress/maxSteps }} className={'progress'}></div>\r\n\t\t\t</div>\r\n\t\t\t<div id={'increase'} onClick={increaseProgress} className={'progressSymbol'}>+</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { ProgressBar } from '../component/progress-bar/ProgressBar'\r\n\r\nexport const HomePage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Welcome</h1>\r\n\t\t\t<ProgressBar{...{ initialProgress: 1, maxSteps: 5 }} />\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { HomePage } from '../view/page/HomePage'\r\n\r\nclass Routes extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route component={HomePage} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes","import './App.css';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}